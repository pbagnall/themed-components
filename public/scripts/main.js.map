{"version":3,"file":"main.js","sources":["../../src/utils.js","../../components/Label.js"],"sourcesContent":["export function createElement(tag, klass, text) {\n   const elem = document.createElement(tag);\n   if (klass) elem.className = klass;\n   if (text) elem.appendChild(document.createTextNode(text));\n   return elem;\n}","// Label API\n// <ul-label>Label</ul-label>\n//\n// Dismisssable: adding this attribute adds the dismiss control to the label, which fire an event when clicked.\n// The value of this attribute is ignored, it's simple a flag.\n// <ul-label dismissable>Label</ul-label>\n//\n// Icon: adds an icon before the text in the Label.\n// Permitted values are the names of icons in the Material Icon font.\n// <ul-label icon='cog'>Label</ul-label>\n//\n// Sets the size of the label. Valid sizes are [large, medium, small]\n// <ul-label size=''>Label</ul-label>\n\nimport { createElement as ce } from '../src/utils.js';\n\nlet labelStyleTemplate = document.createElement('template');\nlabelStyleTemplate.innerHTML = `\n   <style>\n      div {\n         display: inline-flex;\n         align-items: flex-start;\n\n         background-color: var(--background-color);\n         color: var(--color);\n         border: 1px solid var(--border-color);\n\n         border-radius: var(--border-radius);\n         padding: var(--padding);\n         font-family: var(--font-family);\n         font-size: var(--font-size);\n         gap: 8px;\n      }\n\n      .icon, .close {\n         font-family: \"Material Symbols Outlined\";\n         font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 24;\n         margin: 0;\n         position: relative;\n         top: 1px;\n\n         font-size: 1em;\n         width: 1em;\n      }\n\n      .close {\n         position: relative;\n\n         margin-right: -0.1875em;\n         top: 2px;\n      }\n   </style>`;\n\nclass Label extends HTMLElement {\n   constructor() {\n      super();\n      this.attachShadow({ mode: 'open'});\n      this.shadowRoot.appendChild(labelStyleTemplate.content.cloneNode(true));\n   }\n\n   connectedCallback() {\n      let dismissable = this.hasAttribute('dismissable');\n      let iconName = this.getAttribute('icon');\n      let size = this.getAttribute('size');\n\n      let label = ce('div');\n\n      label.appendChild(ce('span','foo','\\u200b'));\n      if (iconName) label.appendChild(ce('span','icon', iconName));\n      for (let node of this.childNodes) {\n         label.appendChild(node);\n      }\n      if (dismissable) label.appendChild(ce('span','close', 'close'));\n\n      this.shadowRoot.appendChild(label);\n   }\n}\n\nwindow.addEventListener('load', () => {\n   customElements.define(\"ul-label\", Label);\n});\n"],"names":["createElement","tag","klass","text","elem","document","className","appendChild","createTextNode","labelStyleTemplate","innerHTML","Label","HTMLElement","constructor","super","this","attachShadow","mode","shadowRoot","content","cloneNode","connectedCallback","dismissable","hasAttribute","iconName","getAttribute","label","ce","node","childNodes","window","addEventListener","customElements","define"],"mappings":"QAAO,SAASA,EAAcC,EAAKC,EAAOC,GACvC,MAAMC,EAAOC,SAASL,cAAcC,GAGpC,OAFIC,IAAOE,EAAKE,UAAYJ,GACxBC,GAAMC,EAAKG,YAAYF,SAASG,eAAeL,IAC5CC,CACV,wQCWA,IAAIK,EAAqBJ,SAASL,cAAc,YAChDS,EAAmBC,UAAY,u0BAoC/B,MAAMC,UAAcC,YACjB,WAAAC,GACGC,QACAC,KAAKC,aAAa,CAAEC,KAAM,SAC1BF,KAAKG,WAAWX,YAAYE,EAAmBU,QAAQC,WAAU,GACnE,CAED,iBAAAC,GACG,IAAIC,EAAcP,KAAKQ,aAAa,eAChCC,EAAWT,KAAKU,aAAa,QACtBV,KAAKU,aAAa,QAE7B,IAAIC,EAAQC,EAAG,OAEfD,EAAMnB,YAAYoB,EAAG,OAAO,MAAM,MAC9BH,GAAUE,EAAMnB,YAAYoB,EAAG,OAAO,OAAQH,IAClD,IAAK,IAAII,KAAQb,KAAKc,WACnBH,EAAMnB,YAAYqB,GAEjBN,GAAaI,EAAMnB,YAAYoB,EAAG,OAAO,QAAS,UAEtDZ,KAAKG,WAAWX,YAAYmB,EAC9B,EAGJI,OAAOC,iBAAiB,QAAQ,KAC7BC,eAAeC,OAAO,WAAYtB,EAAM"}